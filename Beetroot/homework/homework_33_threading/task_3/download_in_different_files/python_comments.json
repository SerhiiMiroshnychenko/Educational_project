{
    "data": [
        {
            "subreddit_id": "t5_2qh0y",
            "author_is_blocked": false,
            "comment_type": null,
            "edited": false,
            "author_flair_type": "text",
            "total_awards_received": 0,
            "subreddit": "Python",
            "author_flair_template_id": null,
            "id": "j7ew2fx",
            "gilded": 0,
            "archived": false,
            "collapsed_reason_code": null,
            "no_follow": true,
            "author": "kuzmovych_y",
            "send_replies": true,
            "parent_id": 41805463778,
            "score": 1,
            "author_fullname": "t2_3vxbrc6o",
            "all_awardings": [],
            "body": "```\ndef _for():  \n    [do(i) for i in range(1000)]\n```\nWould be a fairer comparison.",
            "top_awarded_type": null,
            "author_flair_css_class": null,
            "author_patreon_flair": false,
            "collapsed": false,
            "author_flair_richtext": [],
            "is_submitter": false,
            "gildings": {},
            "collapsed_reason": null,
            "associated_award": null,
            "stickied": false,
            "author_premium": false,
            "can_gild": true,
            "link_id": "t3_10us7au",
            "unrepliable_reason": null,
            "author_flair_text_color": null,
            "score_hidden": true,
            "permalink": "/r/Python/comments/10us7au/map_is_almost_always_slower_than_any_other/j7ew2fx/",
            "subreddit_type": "public",
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "created_utc": 1675669522,
            "subreddit_name_prefixed": "r/Python",
            "controversiality": 0,
            "author_flair_background_color": null,
            "collapsed_because_crowd_control": null,
            "distinguished": null,
            "retrieved_utc": 1675669532,
            "updated_utc": 1675669533,
            "body_sha1": "afaeed02f8f405b5f515c8345caaa94079aef053",
            "utc_datetime_str": "2023-02-06 07:45:22"
        },
        {
            "subreddit_id": "t5_2qh0y",
            "author_is_blocked": false,
            "comment_type": null,
            "edited": false,
            "author_flair_type": "text",
            "total_awards_received": 0,
            "subreddit": "Python",
            "author_flair_template_id": null,
            "id": "j7evd3w",
            "gilded": 0,
            "archived": false,
            "collapsed_reason_code": null,
            "no_follow": true,
            "author": "AutoModerator",
            "send_replies": false,
            "parent_id": null,
            "score": 1,
            "author_fullname": "t2_6l4z3",
            "all_awardings": [],
            "body": "Hi there, from the /r/Python mods.\n\nWe require a text post for projects posted to the subreddit in an attempt to increase overall quality of the posts on the subreddit.\n\nPlease resubmit your post as a text post with a link to your source code, you may include inline images (quite easy if you are on new reddit).\n\nMake sure to follow the rules of the subreddit and post a link to your source code as well as a textual description, you must have more than just an image.\n\nWarm regards and all the best for your future Pythoneering,\n\n/r/Python moderator team\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*",
            "top_awarded_type": null,
            "author_flair_css_class": null,
            "author_patreon_flair": false,
            "collapsed": false,
            "author_flair_richtext": [],
            "is_submitter": false,
            "gildings": {},
            "collapsed_reason": null,
            "associated_award": null,
            "stickied": true,
            "author_premium": true,
            "can_gild": true,
            "link_id": "t3_10v0svw",
            "unrepliable_reason": null,
            "author_flair_text_color": null,
            "score_hidden": true,
            "permalink": "/r/Python/comments/10v0svw/unable_to_run_python_code_saved_on_desktop_named/j7evd3w/",
            "subreddit_type": "public",
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "created_utc": 1675668948,
            "subreddit_name_prefixed": "r/Python",
            "controversiality": 0,
            "author_flair_background_color": null,
            "collapsed_because_crowd_control": null,
            "distinguished": "moderator",
            "retrieved_utc": 1675668959,
            "updated_utc": 1675668960,
            "body_sha1": "dfbacc2ffa11bba038846d07be2b39226117205b",
            "nest_level": 1,
            "utc_datetime_str": "2023-02-06 07:35:48"
        },
        {
            "subreddit_id": "t5_2qh0y",
            "author_is_blocked": false,
            "comment_type": null,
            "edited": false,
            "author_flair_type": "text",
            "total_awards_received": 0,
            "subreddit": "Python",
            "author_flair_template_id": null,
            "id": "j7euw8k",
            "gilded": 0,
            "archived": false,
            "collapsed_reason_code": null,
            "no_follow": true,
            "author": "agusdmb",
            "send_replies": true,
            "parent_id": 41807050102,
            "score": 1,
            "author_fullname": "t2_24e21r5h",
            "all_awardings": [],
            "body": "No, i understand you, i don't like my current solution either.\n\nI did try by hashing and using the code, but couldn't make it work because i was hashing the function without the wrapper sometimes and with the wrapper other times so they wouldn't match. Or i would always be hashing the wrapper, which is the same for every function decorated. Probably im not smart enough to make that work (at least not with hashing)\n\nBut i will default to \\`\\_\\_name\\_\\_\\` and rise and exception whenever another function with the same error is detected, even more, suggest adding a different name in the decorator for that one.\n\nThanks for your time!",
            "top_awarded_type": null,
            "author_flair_css_class": null,
            "author_patreon_flair": false,
            "collapsed": false,
            "author_flair_richtext": [],
            "is_submitter": true,
            "gildings": {},
            "collapsed_reason": null,
            "associated_award": null,
            "stickied": false,
            "author_premium": false,
            "can_gild": true,
            "link_id": "t3_10uo9n8",
            "unrepliable_reason": null,
            "author_flair_text_color": null,
            "score_hidden": true,
            "permalink": "/r/Python/comments/10uo9n8/autofake_for_python/j7euw8k/",
            "subreddit_type": "public",
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "created_utc": 1675668565,
            "subreddit_name_prefixed": "r/Python",
            "controversiality": 0,
            "author_flair_background_color": null,
            "collapsed_because_crowd_control": null,
            "distinguished": null,
            "retrieved_utc": 1675668579,
            "updated_utc": 1675668580,
            "body_sha1": "a2abce4cfc3baf1176726bfa34fbd845f2018a47",
            "utc_datetime_str": "2023-02-06 07:29:25"
        },
        {
            "subreddit_id": "t5_2qh0y",
            "author_is_blocked": false,
            "comment_type": null,
            "edited": false,
            "author_flair_type": "text",
            "total_awards_received": 0,
            "subreddit": "Python",
            "author_flair_template_id": null,
            "id": "j7eufnv",
            "gilded": 0,
            "archived": false,
            "collapsed_reason_code": null,
            "no_follow": false,
            "author": "agusdmb",
            "send_replies": true,
            "parent_id": 41806555736,
            "score": 1,
            "author_fullname": "t2_24e21r5h",
            "all_awardings": [],
            "body": "You explain it much better than I could have!\n\nThanks again!",
            "top_awarded_type": null,
            "author_flair_css_class": null,
            "author_patreon_flair": false,
            "collapsed": false,
            "author_flair_richtext": [],
            "is_submitter": true,
            "gildings": {},
            "collapsed_reason": null,
            "associated_award": null,
            "stickied": false,
            "author_premium": false,
            "can_gild": true,
            "link_id": "t3_10uo9n8",
            "unrepliable_reason": null,
            "author_flair_text_color": null,
            "score_hidden": true,
            "permalink": "/r/Python/comments/10uo9n8/autofake_for_python/j7eufnv/",
            "subreddit_type": "public",
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "created_utc": 1675668200,
            "subreddit_name_prefixed": "r/Python",
            "controversiality": 0,
            "author_flair_background_color": null,
            "collapsed_because_crowd_control": null,
            "distinguished": null,
            "retrieved_utc": 1675668213,
            "updated_utc": 1675668214,
            "body_sha1": "41e173a24848084c3e683d2b559efd712251fc94",
            "utc_datetime_str": "2023-02-06 07:23:20"
        },
        {
            "subreddit_id": "t5_2qh0y",
            "author_is_blocked": false,
            "comment_type": null,
            "edited": false,
            "author_flair_type": "text",
            "total_awards_received": 0,
            "subreddit": "Python",
            "author_flair_template_id": null,
            "id": "j7euawu",
            "gilded": 0,
            "archived": false,
            "collapsed_reason_code": null,
            "no_follow": true,
            "author": "agusdmb",
            "send_replies": true,
            "parent_id": 41805920221,
            "score": 1,
            "author_fullname": "t2_24e21r5h",
            "all_awardings": [],
            "body": "Hey!, sorry, i just added a brief summary so you can get a sense of what this does without having to go to the repository\n\nfeel free to drop your feedback if you do check it out!\n\nthanks",
            "top_awarded_type": null,
            "author_flair_css_class": null,
            "author_patreon_flair": false,
            "collapsed": false,
            "author_flair_richtext": [],
            "is_submitter": true,
            "gildings": {},
            "collapsed_reason": null,
            "associated_award": null,
            "stickied": false,
            "author_premium": false,
            "can_gild": true,
            "link_id": "t3_10uo9n8",
            "unrepliable_reason": null,
            "author_flair_text_color": null,
            "score_hidden": true,
            "permalink": "/r/Python/comments/10uo9n8/autofake_for_python/j7euawu/",
            "subreddit_type": "public",
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "created_utc": 1675668097,
            "subreddit_name_prefixed": "r/Python",
            "controversiality": 0,
            "author_flair_background_color": null,
            "collapsed_because_crowd_control": null,
            "distinguished": null,
            "retrieved_utc": 1675668109,
            "updated_utc": 1675668110,
            "body_sha1": "cfbf4ea378ea9b77958bc19a8343d472ee6b9fe1",
            "utc_datetime_str": "2023-02-06 07:21:37"
        },
        {
            "subreddit_id": "t5_2qh0y",
            "author_is_blocked": false,
            "comment_type": null,
            "edited": false,
            "author_flair_type": "text",
            "total_awards_received": 0,
            "subreddit": "Python",
            "author_flair_template_id": null,
            "id": "j7eu6ba",
            "gilded": 0,
            "archived": false,
            "collapsed_reason_code": null,
            "no_follow": true,
            "author": "crigger61",
            "send_replies": true,
            "parent_id": 41807033320,
            "score": 1,
            "author_fullname": "t2_drxiq",
            "all_awardings": [],
            "body": "I would say to default to `__name__` and on a duplicate raise an exception. or to generate a completely unique hash from it. such as hashing the function code and the name and using that. providing the name manually seems less user friendly and less elegant than having it generated for you and having to manually assign it to what would be normally set. but thats my opinion as a random dev.",
            "top_awarded_type": null,
            "author_flair_css_class": null,
            "author_patreon_flair": false,
            "collapsed": false,
            "author_flair_richtext": [],
            "is_submitter": false,
            "gildings": {},
            "collapsed_reason": null,
            "associated_award": null,
            "stickied": false,
            "author_premium": false,
            "can_gild": true,
            "link_id": "t3_10uo9n8",
            "unrepliable_reason": null,
            "author_flair_text_color": null,
            "score_hidden": true,
            "permalink": "/r/Python/comments/10uo9n8/autofake_for_python/j7eu6ba/",
            "subreddit_type": "public",
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "created_utc": 1675667999,
            "subreddit_name_prefixed": "r/Python",
            "controversiality": 0,
            "author_flair_background_color": null,
            "collapsed_because_crowd_control": null,
            "distinguished": null,
            "retrieved_utc": 1675668014,
            "updated_utc": 1675668014,
            "body_sha1": "4213aa67950809d09f5851d6889b8ef5048c5198",
            "utc_datetime_str": "2023-02-06 07:19:59"
        },
        {
            "subreddit_id": "t5_2qh0y",
            "author_is_blocked": false,
            "comment_type": null,
            "edited": false,
            "author_flair_type": "text",
            "total_awards_received": 0,
            "subreddit": "Python",
            "author_flair_template_id": null,
            "id": "j7eu0nm",
            "gilded": 0,
            "archived": false,
            "collapsed_reason_code": null,
            "no_follow": true,
            "author": "romanzdk",
            "send_replies": true,
            "parent_id": null,
            "score": 1,
            "author_fullname": "t2_12fc4o",
            "all_awardings": [],
            "body": "Too immature imo.",
            "top_awarded_type": null,
            "author_flair_css_class": null,
            "author_patreon_flair": false,
            "collapsed": false,
            "author_flair_richtext": [],
            "is_submitter": false,
            "gildings": {},
            "collapsed_reason": null,
            "associated_award": null,
            "stickied": false,
            "author_premium": false,
            "can_gild": true,
            "link_id": "t3_10uknhi",
            "unrepliable_reason": null,
            "author_flair_text_color": null,
            "score_hidden": true,
            "permalink": "/r/Python/comments/10uknhi/has_anybody_tried_using_prisma_in_python_n/j7eu0nm/",
            "subreddit_type": "public",
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "created_utc": 1675667876,
            "subreddit_name_prefixed": "r/Python",
            "controversiality": 0,
            "author_flair_background_color": null,
            "collapsed_because_crowd_control": null,
            "distinguished": null,
            "retrieved_utc": 1675667889,
            "updated_utc": 1675667889,
            "body_sha1": "55afb1db2cccbc41198b95f55bdee56fbad10113",
            "nest_level": 1,
            "utc_datetime_str": "2023-02-06 07:17:56"
        },
        {
            "subreddit_id": "t5_2qh0y",
            "author_is_blocked": false,
            "comment_type": null,
            "edited": false,
            "author_flair_type": "text",
            "total_awards_received": 0,
            "subreddit": "Python",
            "author_flair_template_id": null,
            "id": "j7etyv3",
            "gilded": 0,
            "archived": false,
            "collapsed_reason_code": null,
            "no_follow": true,
            "author": "JestemStefan",
            "send_replies": true,
            "parent_id": 41807003309,
            "score": 1,
            "author_fullname": "t2_etkpdi4b",
            "all_awardings": [],
            "body": "I tested also on the newest Python version and I got  \n\n\n\\`\\`\\`  \nprint(timeit(\\_for, number=100000)) # 7.604009799979394  \nprint(timeit(\\_map, number=100000)) # 6.13843399999314  \nprint(timeit(\\_lc, number=100000)) # 6.806330700026592  \n\\`\\`\\`",
            "top_awarded_type": null,
            "author_flair_css_class": null,
            "author_patreon_flair": false,
            "collapsed": false,
            "author_flair_richtext": [],
            "is_submitter": false,
            "gildings": {},
            "collapsed_reason": null,
            "associated_award": null,
            "stickied": false,
            "author_premium": false,
            "can_gild": true,
            "link_id": "t3_10us7au",
            "unrepliable_reason": null,
            "author_flair_text_color": null,
            "score_hidden": true,
            "permalink": "/r/Python/comments/10us7au/map_is_almost_always_slower_than_any_other/j7etyv3/",
            "subreddit_type": "public",
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "created_utc": 1675667838,
            "subreddit_name_prefixed": "r/Python",
            "controversiality": 0,
            "author_flair_background_color": null,
            "collapsed_because_crowd_control": null,
            "distinguished": null,
            "retrieved_utc": 1675667851,
            "updated_utc": 1675667851,
            "body_sha1": "a3b0d811b640745f54d643d337892e2f3358049f",
            "utc_datetime_str": "2023-02-06 07:17:18"
        },
        {
            "subreddit_id": "t5_2qh0y",
            "author_is_blocked": false,
            "comment_type": null,
            "edited": false,
            "author_flair_type": "text",
            "total_awards_received": 0,
            "subreddit": "Python",
            "author_flair_template_id": null,
            "id": "j7ettd4",
            "gilded": 0,
            "archived": false,
            "collapsed_reason_code": null,
            "no_follow": true,
            "author": "agusdmb",
            "send_replies": true,
            "parent_id": 41806464548,
            "score": 1,
            "author_fullname": "t2_24e21r5h",
            "all_awardings": [],
            "body": "Hi! Great question! This is actually my biggest pain point (to have to add a name for each wrapped function). So at the beginning did used the \\`\\_\\_name\\_\\_\\` of the wrapped function, issues came while testing this and i really didn't know if i should change it or not.\n\nThis is the issue, if using \\`\\_\\_name\\_\\_\\` and decorating two or more functions with the same name they would be sharing the key where inputs/outputs data is stored. So in FAKE mode they could potentially return some other function output if called with the same list of parameters. It doesn't seem like a common case, though this issue could be a huge pain to debug.\n\nI am know thinking that maybe i could default the name to \\`\\_\\_name\\_\\_\\` unless one was actually passed as an argument. I could also check that a function with that name wasn't already decorated and if it was then raise a \"not unique error\", so in that case raising the error want be a common case, but if 2 different functions share their names then you wouldn't have to debug forever to see what's going on.\n\nLet me know what you think of the issues / solutions and if you have a better idea feel free to share\n\nThanks for taking your time to check it out!",
            "top_awarded_type": null,
            "author_flair_css_class": null,
            "author_patreon_flair": false,
            "collapsed": false,
            "author_flair_richtext": [],
            "is_submitter": true,
            "gildings": {},
            "collapsed_reason": null,
            "associated_award": null,
            "stickied": false,
            "author_premium": false,
            "can_gild": true,
            "link_id": "t3_10uo9n8",
            "unrepliable_reason": null,
            "author_flair_text_color": null,
            "score_hidden": true,
            "permalink": "/r/Python/comments/10uo9n8/autofake_for_python/j7ettd4/",
            "subreddit_type": "public",
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "created_utc": 1675667719,
            "subreddit_name_prefixed": "r/Python",
            "controversiality": 0,
            "author_flair_background_color": null,
            "collapsed_because_crowd_control": null,
            "distinguished": null,
            "retrieved_utc": 1675667734,
            "updated_utc": 1675667734,
            "body_sha1": "bd596134139146618c0ac488fa465cfc0edd589a",
            "utc_datetime_str": "2023-02-06 07:15:19"
        },
        {
            "subreddit_id": "t5_2qh0y",
            "author_is_blocked": false,
            "comment_type": null,
            "edited": false,
            "author_flair_type": "text",
            "total_awards_received": 0,
            "subreddit": "Python",
            "author_flair_template_id": null,
            "id": "j7et67h",
            "gilded": 0,
            "archived": false,
            "collapsed_reason_code": null,
            "no_follow": true,
            "author": "JestemStefan",
            "send_replies": true,
            "parent_id": null,
            "score": 1,
            "author_fullname": "t2_etkpdi4b",
            "all_awardings": [],
            "body": "Those two are not even comparable.\n\nThe first one just run the function, but the _map method creates map object and then iterate over it to make a list on top of running the function.\n\nTo make it more comparable you should create a list in the _for method and append objects to it. I'm pretty sure it will be way slower",
            "top_awarded_type": null,
            "author_flair_css_class": null,
            "author_patreon_flair": false,
            "collapsed": false,
            "author_flair_richtext": [],
            "is_submitter": false,
            "gildings": {},
            "collapsed_reason": null,
            "associated_award": null,
            "stickied": false,
            "author_premium": false,
            "can_gild": true,
            "link_id": "t3_10us7au",
            "unrepliable_reason": null,
            "author_flair_text_color": null,
            "score_hidden": true,
            "permalink": "/r/Python/comments/10us7au/map_is_almost_always_slower_than_any_other/j7et67h/",
            "subreddit_type": "public",
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "created_utc": 1675667219,
            "subreddit_name_prefixed": "r/Python",
            "controversiality": 0,
            "author_flair_background_color": null,
            "collapsed_because_crowd_control": null,
            "distinguished": null,
            "retrieved_utc": 1675667237,
            "updated_utc": 1675667238,
            "body_sha1": "1da2545bd7d72370e8a67beb6a0746cb064f1725",
            "nest_level": 1,
            "utc_datetime_str": "2023-02-06 07:06:59"
        }
    ],
    "error": null,
    "metadata": {
        "es": {
            "took": 618,
            "timed_out": false,
            "num_reduce_phases": 2,
            "_shards": {
                "total": 828,
                "successful": 828,
                "skipped": 0,
                "failed": 0
            },
            "hits": {
                "total": {
                    "value": 10000,
                    "relation": "gte"
                },
                "max_score": null
            }
        },
        "es_query": {
            "size": 10,
            "query": {
                "bool": {
                    "must": [
                        {
                            "bool": {
                                "must": [
                                    {
                                        "range": {
                                            "created_utc": {
                                                "gte": 502202
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "bool": {
                                "should": [
                                    {
                                        "match": {
                                            "subreddit": "r/python"
                                        }
                                    }
                                ],
                                "minimum_should_match": 1
                            }
                        }
                    ]
                }
            },
            "aggs": {},
            "sort": {
                "created_utc": "desc"
            }
        },
        "es_query2": "{\"size\":10,\"query\":{\"bool\":{\"must\":[{\"bool\":{\"must\":[{\"range\":{\"created_utc\":{\"gte\":502202}}}]}},{\"bool\":{\"should\":[{\"match\":{\"subreddit\":\"r\\/python\"}}],\"minimum_should_match\":1}}]}},\"aggs\":{},\"sort\":{\"created_utc\":\"desc\"}}",
        "api_launch_time": 1674513027.1645033,
        "api_request_start": 1675669702.2944393,
        "api_request_end": 1675669702.964918,
        "api_total_time": 0.6704785823822021
    }
}