Для реалізації length методу ми підрахували кількість вузлів у списку.
Альтернативною стратегією було б зберігати кількість вузлів у списку
як додаткову частину даних у заголовку списку. Змініть UnorderedList клас,
щоб включити цю інформацію, і перепишіть length метод.

Реалізуйте remove метод, щоб він працював правильно у випадку, коли елемента
немає в списку.

Змініть класи списку, щоб дозволити дублікати. На які методи вплине ця зміна?

Реалізуйте метод __str__ у класі UnorderedList. Що було б хорошим рядковим
представленням для списку?

Реалізуйте метод __str__, щоб списки відображалися способом Python
(у квадратних дужках).

Реалізуйте інші операції, визначені в UnorderedList ADT (додавання, індексування,
висування, вставка).

Реалізуйте метод slice для UnorderedList класу. Він має приймати два параметри,
start і stop, і повертати копію списку, починаючи з start позиції та продовжуючи,
але не включаючи stop позицію.

Реалізуйте інші операції, визначені в OrderedList ADT.

Розглянемо зв’язок між невпорядкованим і впорядкованим списками. Чи можливо, що
успадкування можна використовувати для створення більш ефективної реалізації?
Запровадити цю ієрархію успадкування.

Реалізуйте стек за допомогою пов’язаних списків.

Реалізація черги за допомогою пов’язаних списків.

Реалізуйте deque за допомогою пов’язаних списків.

Розробіть і здійсніть експеримент, який порівнюватиме продуктивність списку Python
зі списком, реалізованим як пов’язаний список.

Розробіть і здійсніть експеримент, який порівнюватиме продуктивність стека та черги
на основі списку Python із реалізацією пов’язаного списку.

Реалізація пов’язаного списку, наведена вище, називається однозв’язаним списком,
оскільки кожен вузол має одне посилання на наступний вузол у послідовності.
Альтернативна реалізація відома як подвійний зв'язаний список. У цій реалізації
кожен вузол має посилання на наступний вузол (зазвичай називається наступним),
а також посилання на попередній вузол (зазвичай викликається назад).
Головне посилання також містить два посилання, одне на перший вузол у пов’язаному
списку та одне на останній. Закодуйте цю реалізацію на Python.